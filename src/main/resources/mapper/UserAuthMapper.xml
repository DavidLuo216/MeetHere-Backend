<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ecnuer996.meetHereBackend.dao.UserAuthMapper">
  <resultMap id="BaseResultMap" type="cn.ecnuer996.meetHereBackend.model.UserAuth">
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="identity_type" jdbcType="VARCHAR" property="identityType" />
    <result column="identifier" jdbcType="VARCHAR" property="identifier" />
    <result column="credential" jdbcType="VARCHAR" property="credential" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, identity_type, identifier, credential
  </sql>
  <select id="registerJudge" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_auth2
    where identity_type = 'nickname' and identifier = #{0}
  </select>
  <select id="loginJudge" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_auth2
    where identity_type = 'nickname' and identifier = #{0} and credential = #{1}
  </select>
  <select id="selectNicknameLoginAuth" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_auth2
    where user_id=#{id,jdbcType=INTEGER} and identity_type = 'nickname'
  </select>
  <select id="selectBySignInMethod" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_auth2
    where identity_type = #{0} and identifier = #{1}
  </select>
  <insert id="insert" parameterType="cn.ecnuer996.meetHereBackend.model.UserAuth">
    insert into user_auth2 (user_id, identity_type, identifier, 
      credential)
    values (#{userId,jdbcType=INTEGER}, #{identityType,jdbcType=VARCHAR}, #{identifier,jdbcType=VARCHAR}, 
      #{credential,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.ecnuer996.meetHereBackend.model.UserAuth">
    insert into user_auth2
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="identityType != null">
        identity_type,
      </if>
      <if test="identifier != null">
        identifier,
      </if>
      <if test="credential != null">
        credential,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="identityType != null">
        #{identityType,jdbcType=VARCHAR},
      </if>
      <if test="identifier != null">
        #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="credential != null">
        #{credential,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>